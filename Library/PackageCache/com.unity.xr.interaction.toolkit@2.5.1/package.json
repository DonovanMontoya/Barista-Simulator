{
  "name": "com.unity.xr.interaction.toolkit",
  "displayName": "XR Interaction Toolkit",
  "version": "2.5.1",
  "unity": "2021.3",
  "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
  "keywords": [
    "XR",
    "VR",
    "toolkit",
    "interaction"
  ],
  "category": "XR",
  "dependencies": {
    "com.unity.inputsystem": "1.7.0",
    "com.unity.mathematics": "1.2.6",
    "com.unity.ugui": "1.0.0",
    "com.unity.xr.core-utils": "2.2.3",
    "com.unity.xr.legacyinputhelpers": "2.1.10",
    "com.unity.modules.audio": "1.0.0",
    "com.unity.modules.imgui": "1.0.0",
    "com.unity.modules.physics": "1.0.0"
  },
  "samples": [
    {
      "displayName": "Starter Assets",
      "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System.",
      "path": "Samples~/Starter Assets"
    },
    {
      "displayName": "Hands Interaction Demo",
      "description": "Sample scene and other assets for hand-tracking integration with the XR Interaction Toolkit.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.xr.hands\">XR Hands</a>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.shadergraph\">Shader Graph</a>",
      "path": "Samples~/Hands Interaction Demo"
    },
    {
      "displayName": "AR Starter Assets",
      "description": "Assets to streamline setup when building for Mobile AR or Mixed Reality with the XR Interaction Toolkit. This includes prefabs and demo scenes to get you started. Note: This depends on the Starter Assets sample package.",
      "path": "Samples~/AR Starter Assets"
    },
    {
      "displayName": "XR Device Simulator",
      "description": "Assets related to the simulation of XR HMD and controllers.",
      "path": "Samples~/XR Device Simulator"
    },
    {
      "displayName": "Meta Gaze Adapter",
      "description": "This sample provides an example to get eye tracking working with the Meta Quest Pro and the XRI Gaze Interactor.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:content/82022\">Oculus Integration Assets</a>",
      "path": "Samples~/Meta Gaze Adapter"
    }
  ],
  "_upm": {
    "changelog": "### Changed\n- Split and moved [Samples](../manual/samples.html) documentation into a new area of the [Table of Contents](../manual/TableOfContents.html) to make discovery and navigation easier.\n- Redesigned and improved [Hands Interaction Demo](../manual/samples-hands-interaction-demo.html) sample scene and prefabs.\n  - Reworked colliders and interactions in sample scene.\n  - Added new rim light material made using Shader Graph.\n  - Added new blend shape pinch dropper for hand rays.\n  - Added grab handle to reposition and reorient the table.\n  - Added poke to drag chess piece examples.\n  - Added socket interactor example to show socket snapping.\n  - Added One Euro Filter algorithm to smooth hand root using XR Hands post processor.\n  - Changed ray visual to now originate from the pinch point instead of a fixed offset from the wrist.\n  - Moved hand menu prefab to be a child of the XR Origin to allow for locomotion.\n- Changed `com.unity.inputsystem` dependency from 1.5.0 to 1.7.0.\n\n### Fixed\n- Fixed how XR Interactor Line Visual sets the reticle rotation when hovering a teleportation interactable with **Match Orientation** set to **World Space Up**, **Target Up**, or **None**, so that it is consistent with how the XR Origin and camera would be oriented upon teleport.\n- Fixed `ObjectSpawner` script in Starter Assets sample applying extra y-axis rotation when **Apply Random Angle At Spawn** is enabled.\n- Fixed incorrect models in AR Starter Assets prefabs for Pyramid and Wedge objects.\n- Fixed incorrect theme asset reference in AR Starter Assets for Arch prefab.\n- When overriding the ray origin, there used to be a significant mismatch between the ray end point and the actual target. To fix this, we now bend the ray towards the hit point found by the raycaster. This ensures the ray visually aligns, while still keeping our preferred ray origin.\n- Fixed Add Component menu path to put Uniform Transform Scale Affordance Receiver in Affordance System &gt; Receiver &gt; Transformation instead of Rendering to match its namespace."
  },
  "upmCi": {
    "footprint": "a8a104ce339c208580697e859ce14d4af673c018"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.interaction.toolkit@2.5/manual/index.html",
  "repository": {
    "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
    "type": "git",
    "revision": "a69615d10db2b00d9e081ca2825ef5e3ffec3043"
  }
}
